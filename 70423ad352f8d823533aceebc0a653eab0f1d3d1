{
  "comments": [
    {
      "key": {
        "uuid": "8f3e4a4a_ef0c1ab9",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "Maybe too reminiscent of std::auto_ptr, which has a deservedly bad reputation.",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 10
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdcaf8da_ed9ca6ba",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "Do you have a suggestion for a better name?",
      "parentUuid": "8f3e4a4a_ef0c1ab9",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 10
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e78a4ca_6e3e9a62",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "\"StrongPtrAIBinder\" or some variant/abbreviation thereof, maybe, if it roughly follows sp\u003c\u003e conventions?",
      "parentUuid": "bdcaf8da_ed9ca6ba",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 10
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "754e0a9b_ac4f6265",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T22:00:14Z",
      "side": 1,
      "message": "It\u0027s really long though already. SpAIBinder?",
      "parentUuid": "8e78a4ca_6e3e9a62",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 10
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0667e3_1a2319d0",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-04T00:27:34Z",
      "side": 1,
      "message": "Sounds good to me.",
      "parentUuid": "754e0a9b_ac4f6265",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 10
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95eaa3aa_a1465df9",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 44,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "Do you want to explicitly check for data races here, as we now do in sp\u003c\u003e? The problem here is that races are unexpectedly destructive. Simultaneous assignment of null to the same pointer can result in a double free, which is almost impossible to debug.",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "679e1fd7_10505d13",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 44,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "I think it would be too expensive to add a lock here. This is similar to shared_ptr: multiple simultaneous access to the same instance is dangerous, but access to different instances is okay. Do you think it would be worth it anyway?",
      "parentUuid": "95eaa3aa_a1465df9",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "182bc960_350f1246",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 44,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "I was not suggesting a lock. See https://cs.corp.google.com/android/system/core/libutils/include/utils/StrongPointer.h?q\u003dStrongPointer.h\u0026dr\u0026l\u003d167 for what I had in mind.\n\nThere\u0027s a subtle difference between sp\u003c\u003e and shared_ptr, in that shared_ptr is required to do the decrement/destruction after the assignment. In some dubious cases, that gets you slightly better semantics. It also makes it much harder to do this kind of race checking, while reducing the window during which such races can cause visible problems. I prefer the sp\u003c\u003e semantics with race checking, but that\u0027s controversial.",
      "parentUuid": "679e1fd7_10505d13",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 60
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40fa6777_4355588d",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 54,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "Why not just pass a pointer to the AutoAIBinder? As it stands, this seems to require an explicit increment in SomeInitFunction, which seems really error prone.",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 54,
        "endChar": 0
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64777668_7673fee4",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 54,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "Because SomeInitFunction has to be in the NDK (and can only take C types). All of the NDK functions which have out parameters also already do the increment for us. The primary user of this code is auto-generated code as well. I agree I technically could do:\n\nAIBinder* a;\nAutoAIBinder a2;\nSomeInitFunction(\u0026a);\na2 \u003d AutoAIBinder(a);\n\nbut I don\u0027t think it\u0027s worth it.",
      "parentUuid": "40fa6777_4355588d",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 54,
        "endChar": 0
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce476d6_e43f5a8c",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 54,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "So the NDK functions effectively return a raw pointer, but increment the reference count?\n\nI assume the InitFunction needs to have a pointer it can directly assign through, as opposed to calling a special function to do the assignment? In the latter case we could at least do some sanity checking.\n\nIf we can\u0027t do any of this, can we strongly discourage use in other cases, add a comment about the required nonzero reference count, and check that mBinder is null when this is called?\n\nIf we let this be used in a more general setting, then the user has to understand some intricacies of reference counting, notably increment first, then decrement. That seems like it\u0027s going to result in lots of impossible-to-debug heap corruption bugs.",
      "parentUuid": "64777668_7673fee4",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 54,
        "endChar": 0
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "815f43c7_1548aba6",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 54,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T22:00:14Z",
      "side": 1,
      "message": "Yeah, they probably shouldn\u0027t ever use it. I\u0027ll comment to that effect.",
      "parentUuid": "2ce476d6_e43f5a8c",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 54,
        "endChar": 0
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "338b756d_c474d51c",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "If this is as intended, can we avoid it? This seems like a bit of a bug magnet since it doesn\u0027t decrement the reference count. I\u0027m not quite sure what the goal is. Is swap() a better API? AFAICT, shared_ptr doesn\u0027t have this for a reason.",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 59,
        "endChar": 25
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ddd08bb_654de4a7",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "I\u0027ve removed it. Not sure why I added it.",
      "parentUuid": "338b756d_c474d51c",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 59,
        "endChar": 25
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeda71d8_fe775b3a",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ddd08bb_654de4a7",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 59,
        "endChar": 25
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6f48b1a_e71a0865",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 70,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "Why not just use std::unique_ptr?",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 13
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a5fe105_4be3ce7d",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 70,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "Because you have to specify the destroy function every time you instantiate it. I could compose std::unique_ptr though if you think that would be better.",
      "parentUuid": "e6f48b1a_e71a0865",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 13
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94ef809e_e7a07faa",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 70,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "This is used for arbitrary types? Or can we get close enough by instead specializing std::default_delete?\n\nIt seems cleaner to build this out of unique_ptr if we can.",
      "parentUuid": "6a5fe105_4be3ce7d",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 13
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43d0534d_145249ab",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 70,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T22:00:14Z",
      "side": 1,
      "message": "Yeah, originally I was trying to do this w/o libc++ dependencies. I can change it to composing unique_ptr. I\u0027d rather not inherit from unique_ptr though since I want to do things like:\n\nclass AutoStatus : AutoA\u003c...\u003e {\n    bool isOk() {\n        return AStatus_isOk(mT);\n    }\n    ...\n}\n\nbelow.",
      "parentUuid": "94ef809e_e7a07faa",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 13
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c43bc2c1_8ce916bb",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 72,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "// Takes ownership of T.",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 51
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78c11271_1d3314bf",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 72,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c43bc2c1_8ce916bb",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 51
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f45ea0e_ce75c165",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 88,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "also removed this, thanks",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 88,
        "endChar": 5
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec718049_99ac82ca",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 88,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f45ea0e_ce75c165",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 88,
        "endChar": 5
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19c24641_83417e35",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T01:30:12Z",
      "side": 1,
      "message": "I suspect you need this one and swap to make this generally usable.",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 39
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0651fcaf_71e46dfa",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-03T01:58:03Z",
      "side": 1,
      "message": "Ack. You\u0027re likely right, but I\u0027m trying to add them as I need them.",
      "parentUuid": "19c24641_83417e35",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 39
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f27889ea_258ec0d5",
        "filename": "libs/binder/ndk/include_ndk/android/binder_auto_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 102,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-10-03T21:00:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0651fcaf_71e46dfa",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 39
      },
      "revId": "70423ad352f8d823533aceebc0a653eab0f1d3d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}